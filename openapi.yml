openapi: 3.0.2
info:
  title: API Restaurant
  version: "1.0"
  description: This is the service the manages the restaurant data in the app GoOutSafe
servers:
  - url: "https://api.prova/"
    variables: {}
    description: The first server used for the definition of APIs
paths:
  /restaurants:
    post:
      x-openapi-router-controller: microservice.api.restaurants
      summary: "Register a new restaurant"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Restaurant"
      responses:
        "201":
          description: "Created"
        "409":
          description: "Already Exist"
      tags:
        - "Restaurant"
  /restaurants/{id}:
    get:
      x-openapi-router-controller: microservice.api.restaurants
      summary: "Get a restaurant specified by Id"
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the restaurant
          schema:
            $ref: "#/components/schemas/Restaurant/properties/id"
      responses:
        "200":
          description: "Attributes of the restaurant"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurant"
        "404":
          description: "Restaurant not found"
      tags:
        - "Restaurant"

  /tables:
    post:
      x-openapi-router-controller: microservice.api.tables
      summary: "Register a new table"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Table"
      responses:
        "201":
          description: "Created"
        "409":
          description: "Already Exist"
      tags:
        - "Table"
  /menus:
    post:
      x-openapi-router-controller: microservice.api.menus
      summary: "Register a new menu"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Menu"
      responses:
        "201":
          description: "Created"
        "409":
          description: "Already Exist"
      tags:
        - "Menu"


components:
  schemas:
    Restaurant:
      type: object
      properties:
        id:
          type: integer
          description: "Unique identifier"
          readOnly: true
          example: 5
        name:
          type: string
          description: "The name of the restaurant"
          maxLength: 128
          example: "Trattoria da Gino"
        lat:
          type: number
          description: "The latitude of the restaurant"
          example: 64.36
        lon:
          type: number
          description: "The longitude of the restaurant"
          example: 85.24
        phone:
          type: string
          description: "The phone number of the restaurant"
          maxLength: 128
          example: "+39 561256145"
        time_of_stay:
          type: integer
          description: "The amount of time (minutes) normally spent for a booking in the restaurant"
          example: 180
          enum: [30, 90, 180]
        cuisine_type:
          type: string
          description: "The cuisine type of the restaurant"
          enum: [Ethnic, Fast Food, Pub]
          example: "Ethnic"
        opening_hours:
          type: integer
          description: "The opening hours of the restaurant"
          example: 10
        closing_hours:
          type: integer
          description: "The closing hours of the restaurant"
          example: 24
        operator_id:
          type: integer
          description: "Id of the operator that owns the restaurant"
          example: 6
        average_rating:
          type: number
          description: "Average rating of the restaurant"
          example: 3.7
    Table:
      type: object
      properties:
        id:
          type: integer
          description: "Unique identifier"
          readOnly: true
          example: 5
        name:
          type: string
          description: "Name of the table"
          example: "A10"
        seats:
          type: integer
          description: "Maximum number of seats for the table"
          example: 10
        restaurant_id:
          type: integer
          description: "Id of the restaurant associated to the table"
          example: 31
    Menu:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          readOnly: true
          example: 1
        name:
          type: string
          description: "Name of the menu"
          maxLength: 128
          example: "Trial Menu"
        foods:
          type: array
          items:
            type: object
          description: "List of foods"
          example: [{"category": "Starters", "name": "Pepperoni pizza", "price": 5.60}]
        restaurant_id:
          type: integer
          description: "Id of the restaurant that is associated to the menu"
          example: 7
    Food:
      type: object
      properties:
        category:
          type: string
          description: "Food category"
          enum: ["Starters", "Main Courses", "Side Dishes", "Desserts", "Drinks", "Pizzas", "Burgers", "Sandwiches"]
        name:
          type: string
          description: "Name of the food"
          example: "Pepperoni pizza"
        price:
          type: number
          description: "Price of the dish"
          example: 5.50
    Review:
      type: object
      properties:
        rating:
          type: integer
          description: "Rating of the restaurant"
          enum: [1, 2, 3, 4, 5]
          example: 4
        message:
          type: string
          description: "Description of the user experience with the restaurant"
          example: "Fantastic"
        restaurant_id:
          type: integer
          description: "Id of the restaurant associated to the review"
          example: 12